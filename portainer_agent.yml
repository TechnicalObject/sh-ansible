# ansible-playbook -i inventory.ini portainer_agent.yml
---
- name: Deploy Portainer Agent
  hosts: portainer_agent
  become: yes
  vars_files:
  - secrets.yml
  tasks:
    - name: Install Docker (if not already installed)
      package:
        name: docker
        state: present
      when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

    - name: Ensure Docker is running
      service:
        name: pkg-ContainerManager-dockerd
        state: started
        enabled: yes

    - name: Backup the original dockerd.json file
      ansible.builtin.copy:
        src: /var/packages/ContainerManager/etc/dockerd.json
        dest: /var/packages/ContainerManager/etc/dockerd.json.bak
        remote_src: true
        mode: '0600'

    - name: Ensure dockerd.json contains required configuration
      ansible.builtin.template:
        src: dockerd.json.j2
        dest: /var/packages/ContainerManager/etc/dockerd.json
        owner: root
        group: root
        mode: '0600'
      notify:
        - Restart Docker Daemon
        - Restart Docker Daemon (restart)

    - name: Deploy Portainer Agent container
      community.docker.docker_container:
        name: portainer_agent
        image: portainer/agent:latest
        state: started
        restart_policy: always
        published_ports:
          - "9001:9001"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "{{ volume_path }}/@docker/volumes:/var/lib/docker/volumes"
          - "{{ volume_path }}/docker/portainer-agent:/host"


  handlers:
    - name: Restart Docker Daemon
      ansible.builtin.command:
        cmd: systemctl daemon-reload
    - name: Restart Docker Daemon (restart)
      ansible.builtin.command:
        cmd: systemctl restart pkg-ContainerManager-dockerd